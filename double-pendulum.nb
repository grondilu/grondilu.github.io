
\[Phi][u_, v_] := Function @@ Module[{\[Lambda], \[Mu], \[Lambda]dot, \[Mu]dot}, {{\[Lambda], \[Mu], \[Lambda]dot, \[Mu]dot}, 
     (Join[#1, Dt[#1] /. {HoldPattern[Dt[\[Lambda]]] -> \[Lambda]dot, HoldPattern[Dt[\[Mu]]] -> \[Mu]dot}] & )[
      (Accumulate[{#1[\[Lambda]] . u, #1[\[Mu]] . v}] & )[
       ({{#1[[1]], -#1[[2]]}, {#1[[2]], #1[[1]]}} & ) @* 
        ({(1 - #1^2)/(1 + #1^2), (2*#1)/(1 + #1^2)} & )]]}]

\[ScriptCapitalL][{a_, b_}, {c_, d_}] := Function @@ Module[{\[Lambda], \[Mu], \[Lambda]dot, \[Mu]dot}, 
    {{\[Lambda], \[Mu], \[Lambda]dot, \[Mu]dot}, With[{\[Phi] = \[Phi][{a, b}, {c, d}][\[Lambda], \[Mu], \[Lambda]dot, \[Mu]dot]}, 
      Simplify[(Total[(#1 . #1/2 & ) /@ Take[\[Phi], {3, 4}]] - Total[#1 . {0, 1}] & )[Take[\[Phi], 2]]] /. 
       HoldPattern[Dt[a | b | c | d]] -> 0]}]

eulerLagrange = Apply[
  Function, Module[
   {a, b, c, d, \[Lambda], \[Mu]},
   {
    {a, b, c, d, \[Lambda], \[Mu]},
    With[
      {l = \[ScriptCapitalL][{a, b}, {c, d}]},
      Assuming[{a^2 + b^2 == 1, 
        c^2 + d^2 == 1, {\[Lambda][t], \[Mu][t]} \[Element] Reals},
       Simplify[
        {
         Dt[
           
           Derivative[0, 0, 1, 0][l][\[Lambda][t], \[Mu][t], 
            D[\[Lambda][t], t], D[\[Mu][t], t]],
           t,
           Constants -> {a, b, c, d}
           ] == 
          Derivative[1, 0, 0, 0][l][\[Lambda][t], \[Mu][t], 
           D[\[Lambda][t], t], D[\[Mu][t], t]],
         Dt[
           
           Derivative[0, 0, 0, 1][l][\[Lambda][t], \[Mu][t], 
            D[\[Lambda][t], t], D[\[Mu][t], t]],
           t,
           Constants -> {a, b, c, d}
           ] == 
          Derivative[0, 1, 0, 0][l][\[Lambda][t], \[Mu][t], 
           D[\[Lambda][t], t], D[\[Mu][t], t]]
         }
        ]
       ]
      ] /. h_[t] :> h
    }
   ]
  ]

Solve[eulerLagrange[a, b, c, d, \[Lambda], \[Mu]], 
  Table[Derivative[2][x], {x, {\[Lambda], \[Mu]}}]] // Simplify
